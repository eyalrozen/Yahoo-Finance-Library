<?xml version="1.0"?>
<doc>
    <assembly>
        <name>YahooFinanceLibraryDLL</name>
    </assembly>
    <members>
        <member name="T:FinanceLibrary.FinanceDataClass">
            <summary>
            Class that contain finance data
            Implements IFinanceDataService
            </summary>
        </member>
        <member name="T:FinanceLibrary.FinanceData">
            <summary>
            FinanceData Object - Contains company name, stock symbol, stock current value, change, percent change, last trade time (Date and hour)
            </summary>
        </member>
        <member name="M:FinanceLibrary.FinanceData.#ctor(System.String,System.String,System.Double,System.Double,System.String,System.String,System.String)">
            <summary>
            Constructor for FinanceData
            </summary>
            <param name="symbol">Stock symbol</param>
            <param name="companyName">Company name</param>
            <param name="currentValue">Stock value</param>
            <param name="change">Change</param>
            <param name="percentChange">Change percent</param>
            <param name="lastTradeTime">Last trade time hour</param>
            <param name="lastTradeDate">Last trade time date</param>
        </member>
        <member name="M:FinanceLibrary.FinanceData.ToString">
            <summary>
            Print all object values
            </summary>
            <returns>string description</returns>
        </member>
        <member name="T:FinanceLibrary.IFinanceDataService">
            <summary>
            Interface of finance data services
            </summary>
        </member>
        <member name="M:FinanceLibrary.IFinanceDataService.GetFinanceDataService(System.String)">
            <summary>
            Get finance data service for given symbol. Throws FinanceDataServiceException
            </summary>
            <param name="companySymbol">Company finance symbol should contains upper letters only</param>
            <returns>IFinanceDataService</returns>
        </member>
        <member name="M:FinanceLibrary.FinanceDataClass.#ctor(System.String,System.String,System.Double,System.Double,System.String,System.String,System.String)">
            <summary>
            Constructor of FinanceData
            </summary>
            <param name="symbol">Finance symbol in upper letters</param>
            <param name="companyName">Company name of symbol given</param>
            <param name="currentValue">Finance current value</param>
            <param name="change">Finance change value</param>
            <param name="percentChange">Percent change of finance</param>
            <param name="lastTradeTime">Hour of last trade time</param>
            <param name="lastTradeDate">Date of last trade time</param>
        </member>
        <member name="M:FinanceLibrary.FinanceDataClass.GetFinanceDataService(System.String)">
            <summary>
            FinanceData implements GetFinanceDataService 
            </summary>
            <param name="companySymbol">Company name of symbol given</param>
            <returns></returns>
        </member>
        <member name="T:FinanceLibrary.FinanceDataFactory">
            <summary>
            Create FinanceData instance via indicated server (FinanceImport enum)
            </summary>
        </member>
        <member name="M:FinanceLibrary.FinanceDataFactory.GetFinanceDataService(FinanceLibrary.FinanceDataFactory.FinanceImport,System.String)">
            <summary>
            Factory of FinanceData object, will import data via FinanceImport enum value
            Throws FinanceDataServiceException
            </summary>
            <param name="importFrom">Enum of wanted server import</param>
            <param name="companySymbol">Stock company symbol</param>
            <returns></returns>
        </member>
        <member name="T:FinanceLibrary.FinanceDataFactory.FinanceImport">
            <summary>
            Create enum for each possible finance import option
            </summary>
        </member>
        <member name="T:FinanceLibrary.FinanceDataFactoryYahoo">
            <summary>
            Create FinanceData object from Yahoo server
            </summary>
        </member>
        <member name="F:FinanceLibrary.FinanceDataFactoryYahoo.instance">
            <summary>
            Part of Singleton design pattern structure
            </summary>
        </member>
        <member name="M:FinanceLibrary.FinanceDataFactoryYahoo.#ctor">
            <summary>
            Part of Singleton design pattern structure
            </summary>
        </member>
        <member name="M:FinanceLibrary.FinanceDataFactoryYahoo.GetFinanceDataService(System.String)">
            <summary>
            Implementation of IFinanceDataService
            Import finance data and parse xml received from yahoo server
            </summary>
            <param name="companySymbol"></param>
            <returns></returns>
        </member>
        <member name="P:FinanceLibrary.FinanceDataFactoryYahoo.Instance">
            <summary>
            Part of Singleton design pattern structure
            </summary>
        </member>
        <member name="M:FinanceLibrary.FinanceDataServiceException.#ctor">
            <summary>
            Initialize en new instance of the FinanceLibrary.FinanceDataServiceException() class
            </summary>
        </member>
        <member name="M:FinanceLibrary.FinanceDataServiceException.#ctor(System.String)">
            <summary>
            Initialize en new instance of the FinanceLibrary.FinanceDataServiceException() 
            class with a specified error message
            </summary>
            <param name="message">The message that describes the error</param>
        </member>
        <member name="M:FinanceLibrary.FinanceDataServiceException.#ctor(System.String,System.Exception)">
            <summary>
            Initialize en new instance of the FinanceLibrary.FinanceDataServiceException() 
            class with a specified error message and a reference to the inner exception that is
            the cause of this exception
            </summary>
            <param name="message">The message that describes the error</param>
            <param name="inner">The exception that is the cause of the current exception, 
            or a null reference (Nothing in visual basic) if no inner exception is specified</param>
        </member>
    </members>
</doc>
